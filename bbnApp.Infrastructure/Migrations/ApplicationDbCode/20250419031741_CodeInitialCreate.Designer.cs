// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using bbnApp.Infrastructure.Data;

#nullable disable

namespace bbnApp.Infrastructure.Migrations.ApplicationDbCode
{
    [DbContext(typeof(ApplicationDbCodeContext))]
    [Migration("20250419031741_CodeInitialCreate")]
    partial class CodeInitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("bbnApp.Domain.Entities.Code.AppSettings", b =>
                {
                    b.Property<string>("Yhid")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnOrder(0)
                        .HasComment("用户组ID");

                    b.Property<string>("SettingId")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnOrder(1)
                        .HasComment("配置ID");

                    b.Property<string>("DefaultValue")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasComment("默认值");

                    b.Property<bool>("IsFiexed")
                        .HasColumnType("bool")
                        .HasComment("固定");

                    b.Property<bool>("IsLock")
                        .HasColumnType("bool")
                        .HasComment("停用");

                    b.Property<sbyte>("Isdelete")
                        .HasMaxLength(1)
                        .HasColumnType("tinyint")
                        .HasComment("删除标志");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime")
                        .HasComment("末次数据变更时间");

                    b.Property<string>("LockReason")
                        .HasColumnType("varchar(40)")
                        .HasComment("停用原因");

                    b.Property<DateTime?>("LockTime")
                        .HasColumnType("datetime")
                        .HasComment("停用时间");

                    b.Property<string>("NowValue")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasComment("当前值");

                    b.Property<string>("ReMarks")
                        .HasColumnType("varchar(40)")
                        .HasComment("备注信息");

                    b.Property<string>("SettingCode")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("配置代码");

                    b.Property<string>("SettingDesc")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasComment("配置说明");

                    b.Property<int>("SettingIndex")
                        .HasMaxLength(3)
                        .HasColumnType("int")
                        .HasComment("序号");

                    b.Property<string>("SettingName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("配置名称");

                    b.Property<string>("SettingType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasComment("配置参数类型");

                    b.Property<string>("ValueRange")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("varchar(400)")
                        .HasComment("取值范围");

                    b.HasKey("Yhid", "SettingId");

                    b.ToTable("AppSettings");
                });

            modelBuilder.Entity("bbnApp.Domain.Entities.Code.AppsCode", b =>
                {
                    b.Property<string>("Yhid")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnOrder(0)
                        .HasComment("用户组ID");

                    b.Property<string>("AppId")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnOrder(1)
                        .HasComment("应用ID");

                    b.Property<string>("AppCode")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("应用代码");

                    b.Property<string>("AppName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("应用名称");

                    b.Property<sbyte>("IsLock")
                        .HasMaxLength(1)
                        .HasColumnType("tinyint")
                        .HasComment("停用");

                    b.Property<sbyte>("Isdelete")
                        .HasMaxLength(1)
                        .HasColumnType("tinyint")
                        .HasComment("删除标志");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime")
                        .HasComment("末次数据变更时间");

                    b.Property<string>("LockReason")
                        .HasColumnType("varchar(40)")
                        .HasComment("停用原因");

                    b.Property<DateTime?>("LockTime")
                        .HasColumnType("datetime")
                        .HasComment("停用时间");

                    b.Property<string>("ReMarks")
                        .HasColumnType("varchar(40)")
                        .HasComment("备注信息");

                    b.Property<string>("RoleDescription")
                        .HasColumnType("varchar(100)")
                        .HasComment("角色介绍");

                    b.HasKey("Yhid", "AppId");

                    b.ToTable("AppsCode");
                });

            modelBuilder.Entity("bbnApp.Domain.Entities.Code.AreaCode", b =>
                {
                    b.Property<string>("Yhid")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnOrder(0)
                        .HasComment("用户组ID");

                    b.Property<string>("AreaId")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnOrder(1)
                        .HasComment("行政区划ID");

                    b.Property<string>("AreaFullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasComment("行政区划全称名称");

                    b.Property<sbyte>("AreaLeve")
                        .HasMaxLength(1)
                        .HasColumnType("tinyint")
                        .HasComment("行政区划级别");

                    b.Property<string>("AreaLeveName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasComment("行政区划级别名称");

                    b.Property<string>("AreaName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("行政区划名称");

                    b.Property<string>("AreaPId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasComment("行政区划父级ID");

                    b.Property<string>("AreaPoint")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("行政区划所在经纬度");

                    b.Property<sbyte>("IsLock")
                        .HasMaxLength(1)
                        .HasColumnType("tinyint")
                        .HasComment("停用");

                    b.Property<sbyte>("Isdelete")
                        .HasMaxLength(1)
                        .HasColumnType("tinyint")
                        .HasComment("删除标志");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime")
                        .HasComment("末次数据变更时间");

                    b.Property<string>("LockReason")
                        .HasColumnType("varchar(40)")
                        .HasComment("停用原因");

                    b.Property<DateTime?>("LockTime")
                        .HasColumnType("datetime")
                        .HasComment("停用时间");

                    b.Property<string>("ReMarks")
                        .HasColumnType("varchar(40)")
                        .HasComment("备注信息");

                    b.HasKey("Yhid", "AreaId");

                    b.ToTable("AreaCode");
                });

            modelBuilder.Entity("bbnApp.Domain.Entities.Code.DataDictionary", b =>
                {
                    b.Property<string>("Yhid")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnOrder(0)
                        .HasComment("用户组ID");

                    b.Property<string>("DicCode")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnOrder(1)
                        .HasComment("字典代码");

                    b.Property<string>("AppId")
                        .HasColumnType("varchar(40)")
                        .HasComment("应用ID");

                    b.Property<string>("AppName")
                        .HasColumnType("varchar(40)")
                        .HasComment("应用名称");

                    b.Property<int>("DicIndex")
                        .HasMaxLength(3)
                        .HasColumnType("int")
                        .HasComment("序号");

                    b.Property<string>("DicName")
                        .IsRequired()
                        .HasColumnType("varchar(40)")
                        .HasComment("字典名称");

                    b.Property<string>("DicPCode")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("父级字典代码");

                    b.Property<string>("DicSpell")
                        .IsRequired()
                        .HasColumnType("varchar(40)")
                        .HasComment("字典简拼");

                    b.Property<bool>("IsLeaf")
                        .HasColumnType("bool")
                        .HasComment("叶子节点");

                    b.Property<bool>("IsLock")
                        .HasColumnType("bool")
                        .HasComment("停用");

                    b.Property<sbyte>("Isdelete")
                        .HasMaxLength(1)
                        .HasColumnType("tinyint")
                        .HasComment("删除标志");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime")
                        .HasComment("末次数据变更时间");

                    b.Property<string>("LockReason")
                        .HasColumnType("varchar(40)")
                        .HasComment("停用原因");

                    b.Property<DateTime?>("LockTime")
                        .HasColumnType("datetime")
                        .HasComment("停用时间");

                    b.Property<string>("ReMarks")
                        .HasColumnType("varchar(40)")
                        .HasComment("备注信息");

                    b.HasKey("Yhid", "DicCode");

                    b.ToTable("DataDictionary");
                });

            modelBuilder.Entity("bbnApp.Domain.Entities.Code.DataDictionaryList", b =>
                {
                    b.Property<string>("Yhid")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnOrder(0)
                        .HasComment("用户组ID");

                    b.Property<string>("ItemId")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnOrder(1)
                        .HasComment("字典ID");

                    b.Property<string>("DicCode")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("字典代码");

                    b.Property<bool>("IsLock")
                        .HasColumnType("bool")
                        .HasComment("停用");

                    b.Property<sbyte>("Isdelete")
                        .HasMaxLength(1)
                        .HasColumnType("tinyint")
                        .HasComment("删除标志");

                    b.Property<int>("ItemIndex")
                        .HasMaxLength(3)
                        .HasColumnType("int")
                        .HasComment("序号");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("字典项目名称");

                    b.Property<string>("ItemSpell")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("字典项目名称-简拼");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime")
                        .HasComment("末次数据变更时间");

                    b.Property<string>("LockReason")
                        .HasColumnType("varchar(40)")
                        .HasComment("停用原因");

                    b.Property<DateTime?>("LockTime")
                        .HasColumnType("datetime")
                        .HasComment("停用时间");

                    b.Property<string>("ReMarks")
                        .HasColumnType("varchar(40)")
                        .HasComment("备注信息");

                    b.HasKey("Yhid", "ItemId");

                    b.ToTable("DataDictionaryList");
                });

            modelBuilder.Entity("bbnApp.Domain.Entities.Code.OperationObjectsCode", b =>
                {
                    b.Property<string>("Yhid")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnOrder(0)
                        .HasComment("用户组ID");

                    b.Property<string>("ObjCode")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnOrder(1)
                        .HasComment("操作对象代码");

                    b.Property<sbyte>("IsLock")
                        .HasMaxLength(1)
                        .HasColumnType("tinyint")
                        .HasComment("停用");

                    b.Property<sbyte>("Isdelete")
                        .HasMaxLength(1)
                        .HasColumnType("tinyint")
                        .HasComment("删除标志");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime")
                        .HasComment("末次数据变更时间");

                    b.Property<string>("LockReason")
                        .HasColumnType("varchar(40)")
                        .HasComment("停用原因");

                    b.Property<DateTime?>("LockTime")
                        .HasColumnType("datetime")
                        .HasComment("停用时间");

                    b.Property<string>("ObjDescription")
                        .HasColumnType("varchar(100)")
                        .HasComment("操作对象说明");

                    b.Property<string>("ObjName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("操作对象名称");

                    b.Property<string>("ReMarks")
                        .HasColumnType("varchar(40)")
                        .HasComment("备注信息");

                    b.HasKey("Yhid", "ObjCode");

                    b.ToTable("OperationObjectsCode");
                });

            modelBuilder.Entity("bbnApp.Domain.Entities.Code.PermissionsCode", b =>
                {
                    b.Property<string>("Yhid")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnOrder(0)
                        .HasComment("用户组ID");

                    b.Property<string>("PermissionId")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnOrder(1)
                        .HasComment("权限代码ID");

                    b.Property<sbyte>("IsLock")
                        .HasMaxLength(1)
                        .HasColumnType("tinyint")
                        .HasComment("停用");

                    b.Property<sbyte>("Isdelete")
                        .HasMaxLength(1)
                        .HasColumnType("tinyint")
                        .HasComment("删除标志");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime")
                        .HasComment("末次数据变更时间");

                    b.Property<string>("LockReason")
                        .HasColumnType("varchar(40)")
                        .HasComment("停用原因");

                    b.Property<DateTime?>("LockTime")
                        .HasColumnType("datetime")
                        .HasComment("停用时间");

                    b.Property<string>("PermissionCode")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("权限代码代码");

                    b.Property<string>("PermissionDescription")
                        .HasColumnType("varchar(100)")
                        .HasComment("权限代码说明");

                    b.Property<string>("PermissionName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("权限代码名称");

                    b.Property<string>("ReMarks")
                        .HasColumnType("varchar(40)")
                        .HasComment("备注信息");

                    b.HasKey("Yhid", "PermissionId");

                    b.ToTable("PermissionsCode");
                });

            modelBuilder.Entity("bbnApp.Domain.Entities.Code.ResponseAnalysis", b =>
                {
                    b.Property<int>("ResponseId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(40)
                        .HasColumnType("int")
                        .HasColumnOrder(1)
                        .HasComment("请求id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ResponseId"));

                    b.Property<sbyte>("Isdelete")
                        .HasMaxLength(1)
                        .HasColumnType("tinyint")
                        .HasComment("删除标志");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime")
                        .HasComment("末次数据变更时间");

                    b.Property<string>("ReMarks")
                        .HasColumnType("varchar(40)")
                        .HasComment("备注信息");

                    b.Property<string>("RequestHost")
                        .IsRequired()
                        .HasColumnType("varchar(40)")
                        .HasComment("请求地址");

                    b.Property<string>("RequestIp")
                        .HasColumnType("varchar(40)")
                        .HasComment("请求IP");

                    b.Property<string>("RequestMethod")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasComment("请求路径");

                    b.Property<string>("RequestPeer")
                        .IsRequired()
                        .HasColumnType("varchar(40)")
                        .HasComment("请求端口");

                    b.Property<DateTime>("RequestTime")
                        .HasColumnType("datetime")
                        .HasComment("请求时间");

                    b.Property<short>("ResponseTime")
                        .HasColumnType("smallint")
                        .HasComment("响应时间");

                    b.HasKey("ResponseId");

                    b.ToTable("ResponseAnalysis");
                });
#pragma warning restore 612, 618
        }
    }
}
