// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using bbnApp.Infrastructure.Data;

#nullable disable

namespace bbnApp.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("bbnApp.Domain.Entities.Business.AuthorRegisterKeys", b =>
                {
                    b.Property<string>("Yhid")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnOrder(0)
                        .HasComment("用户组ID");

                    b.Property<string>("AuthorId")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnOrder(1)
                        .HasComment("身份ID");

                    b.Property<string>("AppId")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("生成的APPID");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("机构ID");

                    b.Property<sbyte>("IsLock")
                        .HasColumnType("tinyint")
                        .HasComment("停用");

                    b.Property<sbyte>("Isdelete")
                        .HasColumnType("tinyint")
                        .HasComment("删除标志");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime")
                        .HasComment("末次数据变更时间");

                    b.Property<string>("LockReason")
                        .HasColumnType("varchar(40)")
                        .HasComment("停用原因");

                    b.Property<DateTime?>("LockTime")
                        .HasColumnType("datetime")
                        .HasComment("停用时间");

                    b.Property<string>("OperatorId")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("操作员ID");

                    b.Property<string>("ReMarks")
                        .HasColumnType("varchar(40)")
                        .HasComment("备注信息");

                    b.Property<string>("SecriteKey")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("生成的密钥");

                    b.Property<string>("SelectedAppId")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasComment("选择使用的应用，后期可能会用到");

                    b.Property<string>("SetAppCode")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("用户注册时填写应用用途代码");

                    b.Property<string>("SetAppDescription")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("用户注册时填写应用用途说明");

                    b.Property<string>("SetAppName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("用户注册时填写应用用途名称");

                    b.HasKey("Yhid", "AuthorId");

                    b.ToTable("AuthorRegisterKeys");
                });

            modelBuilder.Entity("bbnApp.Domain.Entities.Business.UploadFileList", b =>
                {
                    b.Property<string>("Yhid")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnOrder(0)
                        .HasComment("用户组ID");

                    b.Property<string>("FileId")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnOrder(1)
                        .HasComment("文件ID");

                    b.Property<string>("FileEx")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasComment("文件类型");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("varchar(80)")
                        .HasComment("文件名称");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasComment("存储路径");

                    b.Property<string>("FileType")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("文件类型");

                    b.Property<sbyte>("IsLock")
                        .HasMaxLength(1)
                        .HasColumnType("tinyint")
                        .HasComment("停用");

                    b.Property<sbyte>("Isdelete")
                        .HasMaxLength(1)
                        .HasColumnType("tinyint")
                        .HasComment("删除标志");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime")
                        .HasComment("末次数据变更时间");

                    b.Property<string>("LinkKey")
                        .HasColumnType("varchar(40)")
                        .HasComment("对应表主键");

                    b.Property<string>("LinkTable")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("对应表");

                    b.Property<string>("LockReason")
                        .HasColumnType("varchar(40)")
                        .HasComment("停用原因");

                    b.Property<DateTime?>("LockTime")
                        .HasColumnType("datetime")
                        .HasComment("停用时间");

                    b.Property<string>("ReMarks")
                        .HasColumnType("varchar(40)")
                        .HasComment("备注信息");

                    b.HasKey("Yhid", "FileId");

                    b.ToTable("UploadFileList");
                });

            modelBuilder.Entity("bbnApp.Domain.Entities.Business.UserAabInformations", b =>
                {
                    b.Property<string>("Yhid")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnOrder(0)
                        .HasComment("用户组ID");

                    b.Property<string>("AabId")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnOrder(1)
                        .HasComment("种养信息ID");

                    b.Property<string>("AABType")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("种养类型");

                    b.Property<decimal>("AreaNumber")
                        .HasColumnType("DECIMAL(8,2)")
                        .HasComment("面积");

                    b.Property<string>("AreaNumberUnit")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasComment("面积单位");

                    b.Property<string>("Categori")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("种养分类");

                    b.Property<string>("Distribution")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasComment("分布情况");

                    b.Property<sbyte>("IsLock")
                        .HasColumnType("tinyint")
                        .HasComment("停用");

                    b.Property<sbyte>("Isdelete")
                        .HasColumnType("tinyint")
                        .HasComment("删除标志");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime")
                        .HasComment("末次数据变更时间");

                    b.Property<string>("LockReason")
                        .HasColumnType("varchar(40)")
                        .HasComment("停用原因");

                    b.Property<DateTime?>("LockTime")
                        .HasColumnType("datetime")
                        .HasComment("停用时间");

                    b.Property<string>("ObjCode")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("种养名称代码");

                    b.Property<string>("ObjName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("种养名称");

                    b.Property<string>("Point")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)")
                        .HasComment("主要位置");

                    b.Property<string>("ReMarks")
                        .HasColumnType("varchar(40)")
                        .HasComment("备注信息");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("用户ID");

                    b.HasKey("Yhid", "AabId");

                    b.ToTable("UserAabInformations");
                });

            modelBuilder.Entity("bbnApp.Domain.Entities.Business.UserBoxs", b =>
                {
                    b.Property<string>("Yhid")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnOrder(0)
                        .HasComment("用户组ID");

                    b.Property<string>("BoxId")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnOrder(1)
                        .HasComment("盒子ID");

                    b.Property<string>("BoxLocation")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)")
                        .HasComment("安装位置");

                    b.Property<string>("BoxName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("盒子名称");

                    b.Property<string>("BoxNumber")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("盒子编号");

                    b.Property<string>("DeviceId")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("设备ID,盒子对应的标准代码");

                    b.Property<DateTime>("InstallTime")
                        .HasColumnType("datetime")
                        .HasComment("安装时间");

                    b.Property<string>("Installer")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("安装人");

                    b.Property<string>("InstallerId")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("安装人ID");

                    b.Property<sbyte>("IsDelete")
                        .HasColumnType("tinyint")
                        .HasComment("删除标志");

                    b.Property<sbyte>("IsLock")
                        .HasColumnType("tinyint")
                        .HasComment("停用");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime")
                        .HasComment("末次数据变更时间");

                    b.Property<string>("LockReason")
                        .HasColumnType("varchar(40)")
                        .HasComment("停用原因");

                    b.Property<DateTime?>("LockTime")
                        .HasColumnType("datetime")
                        .HasComment("停用时间");

                    b.Property<string>("ReMarks")
                        .HasColumnType("varchar(40)")
                        .HasComment("备注信息");

                    b.Property<int>("TapeWidth")
                        .HasColumnType("INT")
                        .HasComment("带宽,M");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("用户ID");

                    b.Property<DateTime>("Warranty")
                        .HasColumnType("datetime")
                        .HasComment("维保到期时间");

                    b.Property<string>("WlanType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasComment("网络连接方式");

                    b.HasKey("Yhid", "BoxId");

                    b.ToTable("UserBoxs");
                });

            modelBuilder.Entity("bbnApp.Domain.Entities.Business.UserCameras", b =>
                {
                    b.Property<string>("Yhid")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnOrder(0)
                        .HasComment("用户组ID");

                    b.Property<string>("CameraId")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnOrder(1)
                        .HasComment("摄像头ID");

                    b.Property<string>("BoxId")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("盒子ID");

                    b.Property<string>("CameraAdmin")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("摄像头登录名");

                    b.Property<string>("CameraChannel")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("摄像头通道号");

                    b.Property<string>("CameraIp")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("摄像头IP");

                    b.Property<string>("CameraName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("摄像头自定义名称");

                    b.Property<string>("CameraNumber")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("摄像头编号");

                    b.Property<string>("CameraPassword")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasComment("摄像头登录密码");

                    b.Property<string>("DeviceId")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("设备ID,摄像头对应标准代码");

                    b.Property<DateTime>("InstallTime")
                        .HasColumnType("datetime")
                        .HasComment("安装时间");

                    b.Property<string>("Installer")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("安装人");

                    b.Property<string>("InstallerId")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("安装人ID");

                    b.Property<sbyte>("IsDelete")
                        .HasColumnType("tinyint")
                        .HasComment("删除标志");

                    b.Property<sbyte>("IsLock")
                        .HasColumnType("tinyint")
                        .HasComment("停用");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime")
                        .HasComment("末次数据变更时间");

                    b.Property<string>("LockReason")
                        .HasColumnType("varchar(40)")
                        .HasComment("停用原因");

                    b.Property<DateTime?>("LockTime")
                        .HasColumnType("datetime")
                        .HasComment("停用时间");

                    b.Property<string>("ReMarks")
                        .HasColumnType("varchar(40)")
                        .HasComment("备注信息");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("用户ID");

                    b.Property<DateTime>("Warranty")
                        .HasColumnType("datetime")
                        .HasComment("维保到期时间");

                    b.HasKey("Yhid", "CameraId");

                    b.ToTable("UserCameras");
                });

            modelBuilder.Entity("bbnApp.Domain.Entities.Business.UserContacts", b =>
                {
                    b.Property<string>("Yhid")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnOrder(0)
                        .HasComment("用户组ID");

                    b.Property<string>("ContactId")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnOrder(1)
                        .HasComment("联系人ID");

                    b.Property<string>("Contact")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("联系人");

                    b.Property<bool>("IsFirst")
                        .HasColumnType("TINYINT(1)")
                        .HasComment("主要联系人");

                    b.Property<sbyte>("IsLock")
                        .HasColumnType("tinyint")
                        .HasComment("停用");

                    b.Property<sbyte>("Isdelete")
                        .HasColumnType("tinyint")
                        .HasComment("删除标志");

                    b.Property<string>("Jobs")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("职务");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime")
                        .HasComment("末次数据变更时间");

                    b.Property<string>("LockReason")
                        .HasColumnType("varchar(40)")
                        .HasComment("停用原因");

                    b.Property<DateTime?>("LockTime")
                        .HasColumnType("datetime")
                        .HasComment("停用时间");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("联系电话");

                    b.Property<string>("ReMarks")
                        .HasColumnType("varchar(40)")
                        .HasComment("备注信息");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("用户ID");

                    b.HasKey("Yhid", "ContactId");

                    b.ToTable("UserContacts");
                });

            modelBuilder.Entity("bbnApp.Domain.Entities.Business.UserGetWayDevices", b =>
                {
                    b.Property<string>("Yhid")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnOrder(0)
                        .HasComment("用户组ID");

                    b.Property<string>("GetWayDeviceId")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnOrder(1)
                        .HasComment("网关管理的设备ID");

                    b.Property<string>("DeviceId")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("设备ID,设备对应标准代码");

                    b.Property<string>("DeviceNumber")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("设备编号");

                    b.Property<string>("GetWayId")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("网关ID");

                    b.Property<DateTime>("InstallTime")
                        .HasColumnType("datetime")
                        .HasComment("安装时间");

                    b.Property<string>("Installer")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("安装人");

                    b.Property<string>("InstallerId")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("安装人ID");

                    b.Property<sbyte>("IsDelete")
                        .HasColumnType("tinyint")
                        .HasComment("删除标志");

                    b.Property<sbyte>("IsLock")
                        .HasColumnType("tinyint")
                        .HasComment("停用");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime")
                        .HasComment("末次数据变更时间");

                    b.Property<string>("LockReason")
                        .HasColumnType("varchar(40)")
                        .HasComment("停用原因");

                    b.Property<DateTime?>("LockTime")
                        .HasColumnType("datetime")
                        .HasComment("停用时间");

                    b.Property<string>("ReMarks")
                        .HasColumnType("varchar(40)")
                        .HasComment("备注信息");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("用户ID");

                    b.Property<DateTime>("Warranty")
                        .HasColumnType("datetime")
                        .HasComment("维保到期时间");

                    b.HasKey("Yhid", "GetWayDeviceId");

                    b.ToTable("UserGetWayDevices");
                });

            modelBuilder.Entity("bbnApp.Domain.Entities.Business.UserGetWays", b =>
                {
                    b.Property<string>("Yhid")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnOrder(0)
                        .HasComment("用户组ID");

                    b.Property<string>("GetWayId")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnOrder(1)
                        .HasComment("网关ID");

                    b.Property<string>("DeviceId")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("网关设备ID,网关设备对应标准代码");

                    b.Property<string>("GetWayLocation")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)")
                        .HasComment("安装位置");

                    b.Property<string>("GetWayName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("网关名称,网关名称");

                    b.Property<string>("GetWayNumber")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("网关编号");

                    b.Property<DateTime>("InstallTime")
                        .HasColumnType("datetime")
                        .HasComment("安装时间");

                    b.Property<string>("Installer")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("安装人");

                    b.Property<string>("InstallerId")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("安装人ID");

                    b.Property<sbyte>("IsDelete")
                        .HasColumnType("tinyint")
                        .HasComment("删除标志");

                    b.Property<sbyte>("IsLock")
                        .HasColumnType("tinyint")
                        .HasComment("停用");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime")
                        .HasComment("末次数据变更时间");

                    b.Property<string>("LockReason")
                        .HasColumnType("varchar(40)")
                        .HasComment("停用原因");

                    b.Property<DateTime?>("LockTime")
                        .HasColumnType("datetime")
                        .HasComment("停用时间");

                    b.Property<string>("ReMarks")
                        .HasColumnType("varchar(40)")
                        .HasComment("备注信息");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("用户ID");

                    b.Property<DateTime>("Warranty")
                        .HasColumnType("datetime")
                        .HasComment("维保到期时间");

                    b.Property<string>("WlanType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasComment("网络连接方式");

                    b.HasKey("Yhid", "GetWayId");

                    b.ToTable("UserGetWays");
                });

            modelBuilder.Entity("bbnApp.Domain.Entities.Business.UserInformations", b =>
                {
                    b.Property<string>("Yhid")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnOrder(0)
                        .HasComment("用户组ID");

                    b.Property<string>("UserId")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnOrder(1)
                        .HasComment("用户ID");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasComment("通信地址");

                    b.Property<string>("AreaId")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("所在地ID");

                    b.Property<string>("AreaName")
                        .IsRequired()
                        .HasMaxLength(140)
                        .HasColumnType("varchar(140)")
                        .HasComment("所在地名称");

                    b.Property<string>("Contact")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("联系人");

                    b.Property<sbyte>("IsDelete")
                        .HasColumnType("tinyint")
                        .HasComment("删除标志");

                    b.Property<sbyte>("IsLock")
                        .HasColumnType("tinyint")
                        .HasComment("停用");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime")
                        .HasComment("末次数据变更时间");

                    b.Property<string>("LockReason")
                        .HasColumnType("varchar(40)")
                        .HasComment("停用原因");

                    b.Property<DateTime?>("LockTime")
                        .HasColumnType("datetime")
                        .HasComment("停用时间");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("联系电话");

                    b.Property<string>("Point")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasComment("通信地址");

                    b.Property<string>("ReMarks")
                        .HasColumnType("varchar(40)")
                        .HasComment("备注信息");

                    b.Property<string>("Scale")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("种养规模");

                    b.Property<string>("UserLeve")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("用户等级");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("用户名称");

                    b.Property<string>("UserNumber")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("用户编号");

                    b.Property<string>("UserType")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("用户类型");

                    b.HasKey("Yhid", "UserId");

                    b.ToTable("UserInformations");
                });

            modelBuilder.Entity("bbnApp.Domain.Entities.Safe.LimiteRecord", b =>
                {
                    b.Property<string>("Yhid")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnOrder(0)
                        .HasComment("用户组ID");

                    b.Property<string>("LimiteId")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnOrder(1)
                        .HasComment("限制记录ID");

                    b.Property<sbyte>("Isdelete")
                        .HasMaxLength(1)
                        .HasColumnType("tinyint")
                        .HasComment("删除标志");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime")
                        .HasComment("末次数据变更时间");

                    b.Property<DateTime>("LimiteExpireTime")
                        .HasColumnType("datetime")
                        .HasComment("限制有效期,到期自动解除");

                    b.Property<string>("LimiteIP")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasComment("限制IP地址");

                    b.Property<string>("LimiteReason")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasComment("限制原因");

                    b.Property<DateTime>("LimiteTime")
                        .HasColumnType("datetime")
                        .HasComment("限制记录时间");

                    b.HasKey("Yhid", "LimiteId");

                    b.ToTable("LimiteRecord");
                });

            modelBuilder.Entity("bbnApp.Domain.Entities.User.CompanyInfo", b =>
                {
                    b.Property<string>("Yhid")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnOrder(0)
                        .HasComment("用户组ID");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnOrder(1)
                        .HasComment("机构ID");

                    b.Property<string>("AreaCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasComment("所在地行政区划代码");

                    b.Property<string>("AreaName")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)")
                        .HasComment("所在地行政区划名称");

                    b.Property<string>("AreaNameExt")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)")
                        .HasComment("所在地详细信息");

                    b.Property<string>("CompanyCode")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("机构代码");

                    b.Property<sbyte>("CompanyLeve")
                        .HasMaxLength(1)
                        .HasColumnType("tinyint")
                        .HasComment("机构级别,1/2/3/4/5");

                    b.Property<string>("CompanyLeveName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("机构级别名称,1级/2级/3级/4级");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)")
                        .HasComment("机构名称");

                    b.Property<string>("CompanyType")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("机构类型,个人/个体/企业/集团");

                    b.Property<string>("Contact")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("联系人");

                    b.Property<sbyte>("IsLock")
                        .HasMaxLength(1)
                        .HasColumnType("tinyint")
                        .HasComment("停用");

                    b.Property<sbyte>("Isdelete")
                        .HasMaxLength(1)
                        .HasColumnType("tinyint")
                        .HasComment("删除标志");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime")
                        .HasComment("末次数据变更时间");

                    b.Property<string>("Location")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("经纬度坐标");

                    b.Property<string>("LockReason")
                        .HasColumnType("varchar(40)")
                        .HasComment("停用原因");

                    b.Property<DateTime?>("LockTime")
                        .HasColumnType("datetime")
                        .HasComment("停用时间");

                    b.Property<string>("OrganizationCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasComment("组织机构代码");

                    b.Property<string>("PCompanyId")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("上级机构ID,企业/集团适用");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasComment("联系电话");

                    b.Property<string>("ReMarks")
                        .HasColumnType("varchar(40)")
                        .HasComment("备注信息");

                    b.HasKey("Yhid", "CompanyId");

                    b.ToTable("CompanyInfo");
                });

            modelBuilder.Entity("bbnApp.Domain.Entities.User.DepartMents", b =>
                {
                    b.Property<string>("Yhid")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnOrder(0)
                        .HasComment("用户组ID");

                    b.Property<string>("DepartMentId")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnOrder(1)
                        .HasComment("部门ID");

                    b.Property<string>("CompanyId")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("机构ID");

                    b.Property<string>("DepartMentCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasComment("部门代码");

                    b.Property<string>("DepartMentDescription")
                        .HasColumnType("varchar(100)")
                        .HasComment("部门介绍");

                    b.Property<sbyte>("DepartMentIndex")
                        .HasMaxLength(1)
                        .HasColumnType("tinyint")
                        .HasComment("部门序号,排序显示");

                    b.Property<string>("DepartMentLocation")
                        .HasColumnType("varchar(100)")
                        .HasComment("部门位置");

                    b.Property<string>("DepartMentName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("部门名称");

                    b.Property<sbyte>("IsLock")
                        .HasMaxLength(1)
                        .HasColumnType("tinyint")
                        .HasComment("停用");

                    b.Property<sbyte>("Isdelete")
                        .HasMaxLength(1)
                        .HasColumnType("tinyint")
                        .HasComment("删除标志");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime")
                        .HasComment("末次数据变更时间");

                    b.Property<string>("LockReason")
                        .HasColumnType("varchar(40)")
                        .HasComment("停用原因");

                    b.Property<DateTime?>("LockTime")
                        .HasColumnType("datetime")
                        .HasComment("停用时间");

                    b.Property<string>("PDepartMentId")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasComment("上级部门ID");

                    b.Property<string>("ReMarks")
                        .HasColumnType("varchar(40)")
                        .HasComment("备注信息");

                    b.HasKey("Yhid", "DepartMentId");

                    b.ToTable("DepartMents");
                });

            modelBuilder.Entity("bbnApp.Domain.Entities.User.Employees", b =>
                {
                    b.Property<string>("Yhid")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnOrder(0)
                        .HasComment("用户组ID");

                    b.Property<string>("EmployeeId")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnOrder(1)
                        .HasComment("员工ID");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime")
                        .HasComment("出生日期");

                    b.Property<string>("CommunicationAddress")
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)")
                        .HasComment("员工通信地址");

                    b.Property<string>("CompanyId")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("机构ID");

                    b.Property<DateTime>("DateOfEmployment")
                        .HasColumnType("datetime")
                        .HasComment("入职时间");

                    b.Property<string>("DepartMentId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasComment("所在部门ID");

                    b.Property<bool>("DepartMentMaster")
                        .HasColumnType("bool")
                        .HasComment("部门最高管理人");

                    b.Property<string>("DepartMentName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("所在部门名称");

                    b.Property<string>("EmailNum")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasComment("员工邮箱");

                    b.Property<string>("EmployeeCode")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("员工代码");

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("员工姓名");

                    b.Property<string>("EmployeeNum")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasComment("员工工号");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)")
                        .HasComment("员工性别");

                    b.Property<string>("IDCardNumber")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasComment("员工证件号码");

                    b.Property<sbyte>("IsLock")
                        .HasMaxLength(1)
                        .HasColumnType("tinyint")
                        .HasComment("停用");

                    b.Property<sbyte>("Isdelete")
                        .HasMaxLength(1)
                        .HasColumnType("tinyint")
                        .HasComment("删除标志");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime")
                        .HasComment("末次数据变更时间");

                    b.Property<string>("LockReason")
                        .HasColumnType("varchar(40)")
                        .HasComment("停用原因");

                    b.Property<DateTime?>("LockTime")
                        .HasColumnType("datetime")
                        .HasComment("停用时间");

                    b.Property<string>("PEmployeeId")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("分管领导ID");

                    b.Property<string>("PhoneNum")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasComment("员工联系电话");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasComment("职务名称");

                    b.Property<sbyte>("PositionLeve")
                        .HasMaxLength(1)
                        .HasColumnType("tinyint")
                        .HasComment("职务等级");

                    b.Property<string>("ReMarks")
                        .HasColumnType("varchar(40)")
                        .HasComment("备注信息");

                    b.HasKey("Yhid", "EmployeeId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("bbnApp.Domain.Entities.User.Operators", b =>
                {
                    b.Property<string>("Yhid")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnOrder(0)
                        .HasComment("用户组ID");

                    b.Property<string>("OperatorId")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnOrder(1)
                        .HasComment("分配记录ID");

                    b.Property<string>("CompanyId")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("机构ID");

                    b.Property<string>("EmployeeId")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("员工ID");

                    b.Property<sbyte>("IsLock")
                        .HasMaxLength(1)
                        .HasColumnType("tinyint")
                        .HasComment("停用");

                    b.Property<sbyte>("Isdelete")
                        .HasMaxLength(1)
                        .HasColumnType("tinyint")
                        .HasComment("删除标志");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime")
                        .HasComment("末次数据变更时间");

                    b.Property<string>("LockReason")
                        .HasColumnType("varchar(40)")
                        .HasComment("停用原因");

                    b.Property<DateTime?>("LockTime")
                        .HasColumnType("datetime")
                        .HasComment("停用时间");

                    b.Property<string>("PassWord")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasComment("密码,需加密");

                    b.Property<DateTime>("PassWordExpTime")
                        .HasColumnType("datetime")
                        .HasComment("密码重置时间");

                    b.Property<string>("ReMarks")
                        .HasColumnType("varchar(40)")
                        .HasComment("备注信息");

                    b.HasKey("Yhid", "OperatorId");

                    b.ToTable("Operators");
                });

            modelBuilder.Entity("bbnApp.Domain.Entities.User.PermissionAssignment", b =>
                {
                    b.Property<string>("Yhid")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnOrder(0)
                        .HasComment("用户组ID");

                    b.Property<string>("PermissionId")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnOrder(1)
                        .HasComment("分配记录ID");

                    b.Property<string>("CompanyId")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("机构ID");

                    b.Property<sbyte>("IsLock")
                        .HasMaxLength(1)
                        .HasColumnType("tinyint")
                        .HasComment("停用");

                    b.Property<sbyte>("Isdelete")
                        .HasMaxLength(1)
                        .HasColumnType("tinyint")
                        .HasComment("删除标志");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime")
                        .HasComment("末次数据变更时间");

                    b.Property<string>("LockReason")
                        .HasColumnType("varchar(40)")
                        .HasComment("停用原因");

                    b.Property<DateTime?>("LockTime")
                        .HasColumnType("datetime")
                        .HasComment("停用时间");

                    b.Property<string>("OperatorId")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("操作员ID");

                    b.Property<string>("ReMarks")
                        .HasColumnType("varchar(40)")
                        .HasComment("备注信息");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("角色ID");

                    b.HasKey("Yhid", "PermissionId");

                    b.ToTable("PermissionAssignment");
                });

            modelBuilder.Entity("bbnApp.Domain.Entities.User.RoleAppsManagement", b =>
                {
                    b.Property<string>("Yhid")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnOrder(0)
                        .HasComment("用户组ID");

                    b.Property<string>("RoleId")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnOrder(1)
                        .HasComment("角色ID");

                    b.Property<string>("AppId")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnOrder(2)
                        .HasComment("应用ID");

                    b.Property<string>("CompanyId")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("机构ID");

                    b.Property<sbyte>("IsLock")
                        .HasMaxLength(1)
                        .HasColumnType("tinyint")
                        .HasComment("停用");

                    b.Property<sbyte>("Isdelete")
                        .HasMaxLength(1)
                        .HasColumnType("tinyint")
                        .HasComment("删除标志");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime")
                        .HasComment("末次数据变更时间");

                    b.Property<string>("LockReason")
                        .HasColumnType("varchar(40)")
                        .HasComment("停用原因");

                    b.Property<DateTime?>("LockTime")
                        .HasColumnType("datetime")
                        .HasComment("停用时间");

                    b.Property<string>("ReMarks")
                        .HasColumnType("varchar(40)")
                        .HasComment("备注信息");

                    b.HasKey("Yhid", "RoleId", "AppId");

                    b.ToTable("RoleAppsManagement");
                });

            modelBuilder.Entity("bbnApp.Domain.Entities.User.RoleManagment", b =>
                {
                    b.Property<string>("Yhid")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnOrder(0)
                        .HasComment("用户组ID");

                    b.Property<string>("RoleId")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnOrder(1)
                        .HasComment("角色ID");

                    b.Property<string>("CompanyId")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("机构ID");

                    b.Property<sbyte>("IsLock")
                        .HasMaxLength(1)
                        .HasColumnType("tinyint")
                        .HasComment("停用");

                    b.Property<sbyte>("Isdelete")
                        .HasMaxLength(1)
                        .HasColumnType("tinyint")
                        .HasComment("删除标志");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime")
                        .HasComment("末次数据变更时间");

                    b.Property<string>("LockReason")
                        .HasColumnType("varchar(40)")
                        .HasComment("停用原因");

                    b.Property<DateTime?>("LockTime")
                        .HasColumnType("datetime")
                        .HasComment("停用时间");

                    b.Property<string>("ReMarks")
                        .HasColumnType("varchar(40)")
                        .HasComment("备注信息");

                    b.Property<string>("RoleCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasComment("角色代码");

                    b.Property<string>("RoleDescription")
                        .HasColumnType("varchar(100)")
                        .HasComment("角色介绍");

                    b.Property<sbyte>("RoleLeve")
                        .HasMaxLength(1)
                        .HasColumnType("tinyint")
                        .HasComment("角色级别");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("角色名称");

                    b.HasKey("Yhid", "RoleId");

                    b.ToTable("RoleManagment");
                });

            modelBuilder.Entity("bbnApp.Domain.Entities.User.RolePermissionManagement", b =>
                {
                    b.Property<string>("Yhid")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnOrder(0)
                        .HasComment("用户组ID");

                    b.Property<string>("RoleId")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnOrder(1)
                        .HasComment("角色ID");

                    b.Property<string>("ObjCode")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnOrder(2)
                        .HasComment("对象代码");

                    b.Property<string>("PermissionCode")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnOrder(3)
                        .HasComment("操作代码");

                    b.Property<string>("CompanyId")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("机构ID");

                    b.Property<sbyte>("IsLock")
                        .HasMaxLength(1)
                        .HasColumnType("tinyint")
                        .HasComment("停用");

                    b.Property<sbyte>("Isdelete")
                        .HasMaxLength(1)
                        .HasColumnType("tinyint")
                        .HasComment("删除标志");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime")
                        .HasComment("末次数据变更时间");

                    b.Property<string>("LockReason")
                        .HasColumnType("varchar(40)")
                        .HasComment("停用原因");

                    b.Property<DateTime?>("LockTime")
                        .HasColumnType("datetime")
                        .HasComment("停用时间");

                    b.Property<string>("ReMarks")
                        .HasColumnType("varchar(40)")
                        .HasComment("备注信息");

                    b.HasKey("Yhid", "RoleId", "ObjCode", "PermissionCode");

                    b.ToTable("RolePermissionManagement");
                });

            modelBuilder.Entity("bbnApp.Domain.Entities.UserLogin.LoginInfo", b =>
                {
                    b.Property<string>("Yhid")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnOrder(0)
                        .HasComment("用户组ID");

                    b.Property<string>("EmployeeId")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnOrder(1)
                        .HasComment("用户身份ID");

                    b.Property<string>("CompanyId")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("机构ID,登录成功时记录");

                    b.Property<DateTime>("Exptime")
                        .HasColumnType("datetime")
                        .HasComment("token过期时间");

                    b.Property<sbyte>("Isdelete")
                        .HasMaxLength(1)
                        .HasColumnType("tinyint")
                        .HasComment("删除标志");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime")
                        .HasComment("末次数据变更时间");

                    b.Property<string>("LoginFrom")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasComment("登录来源，PC/APP/WX/ZFB");

                    b.Property<string>("Remarks")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("备注信息");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasComment("token信息");

                    b.HasKey("Yhid", "EmployeeId");

                    b.ToTable("LoginInfo");
                });

            modelBuilder.Entity("bbnApp.Domain.Entities.UserLogin.LoginRecord", b =>
                {
                    b.Property<string>("Yhid")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnOrder(0)
                        .HasComment("用户组ID");

                    b.Property<string>("LoginId")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnOrder(1)
                        .HasComment("登录ID");

                    b.Property<string>("AreaInfo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasComment("登录地区");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("机构ID,登录成功时记录");

                    b.Property<string>("EmployeeId")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasComment("登录用户身份id");

                    b.Property<DateTime?>("Exptime")
                        .HasColumnType("datetime")
                        .HasComment("token过期时间");

                    b.Property<string>("IpAddress")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasComment("登录IP");

                    b.Property<sbyte>("Isdelete")
                        .HasMaxLength(1)
                        .HasColumnType("tinyint")
                        .HasComment("删除标志");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime")
                        .HasComment("末次数据变更时间");

                    b.Property<string>("LoginFrom")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasComment("登录来源，PC/APP/WX/ZFB");

                    b.Property<string>("LoginState")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasComment("登录状态,成功/失败");

                    b.Property<DateTime>("LoginTime")
                        .HasColumnType("datetime")
                        .HasComment("登录时间");

                    b.Property<string>("Token")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasComment("token信息,成功登录才需要");

                    b.HasKey("Yhid", "LoginId");

                    b.ToTable("LoginRecord");
                });
#pragma warning restore 612, 618
        }
    }
}
